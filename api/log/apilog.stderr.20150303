Traceback (most recent call last):
  File "main.py", line 5, in <module>
    from api_count import *
  File "/home/jiangfei/samsung/api/api_count.py", line 4, in <module>
    import mymongo, myutil
  File "/home/jiangfei/samsung/api/mymongo.py", line 45, in <module>
    mymongoconn = MyMongoConn(ip='10.0.17.154', port=27017)
  File "/home/jiangfei/samsung/api/mymongo.py", line 13, in __init__
    self.mgconn = pymongo.Connection(ip, port)
  File "/home/jiangfei/samsung/api/pymongo/connection.py", line 180, in __init__
    max_pool_size, document_class, tz_aware, _connect, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/mongo_client.py", line 274, in __init__
    raise ConnectionFailure(str(e))
pymongo.errors.ConnectionFailure: could not connect to 10.0.17.154:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "main.py", line 5, in <module>
    from api_count import *
  File "/home/jiangfei/samsung/api/api_count.py", line 4, in <module>
    import mymongo, myutil
  File "/home/jiangfei/samsung/api/mymongo.py", line 45, in <module>
    mymongoconn = MyMongoConn(ip='10.0.17.154', port=27017)
  File "/home/jiangfei/samsung/api/mymongo.py", line 13, in __init__
    self.mgconn = pymongo.Connection(ip, port)
  File "/home/jiangfei/samsung/api/pymongo/connection.py", line 180, in __init__
    max_pool_size, document_class, tz_aware, _connect, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/mongo_client.py", line 274, in __init__
    raise ConnectionFailure(str(e))
pymongo.errors.ConnectionFailure: could not connect to 10.0.17.154:27017: [Errno 111] Connection refused
Traceback (most recent call last):
  File "main.py", line 5, in <module>
    from api_count import *
  File "/home/jiangfei/samsung/api/api_count.py", line 4, in <module>
    import mymongo, myutil
  File "/home/jiangfei/samsung/api/mymongo.py", line 45, in <module>
    mymongoconn = MyMongoConn(ip='10.0.17.154', port=27017)
  File "/home/jiangfei/samsung/api/mymongo.py", line 13, in __init__
    self.mgconn = pymongo.Connection(ip, port)
  File "/home/jiangfei/samsung/api/pymongo/connection.py", line 180, in __init__
    max_pool_size, document_class, tz_aware, _connect, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/mongo_client.py", line 274, in __init__
    raise ConnectionFailure(str(e))
pymongo.errors.ConnectionFailure: could not connect to 10.0.17.154:27017: [Errno 111] Connection refused
/home/jiangfei/samsung/api/pytz/__init__.py:35: UserWarning: Module pytz was already imported from /home/jiangfei/samsung/api/pytz/__init__.py, but /usr/lib/python2.7/dist-packages is being added to sys.path
  from pkg_resources import resource_stream
10.0.17.217:52349 - - [03/Mar/2015 15:53:08] "HTTP/1.1 GET /" - 404 Not Found
10.0.17.217:52349 - - [03/Mar/2015 15:53:08] "HTTP/1.1 GET /favicon.ico" - 404 Not Found
10.0.17.154:57439 - - [03/Mar/2015 15:53:14] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
10.0.17.154:57437 - - [03/Mar/2015 15:53:14] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57438 - - [03/Mar/2015 15:53:14] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57448 - - [03/Mar/2015 15:53:39] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error10.0.17.154:57449 - - [03/Mar/2015 15:53:39] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK

10.0.17.154:57447 - - [03/Mar/2015 15:53:39] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57455 - - [03/Mar/2015 15:53:42] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error10.0.17.154:57456 - - [03/Mar/2015 15:53:42] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK

10.0.17.154:57454 - - [03/Mar/2015 15:53:42] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57461 - - [03/Mar/2015 15:53:42] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57462 - - [03/Mar/2015 15:53:42] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK10.0.17.154:57460 - - [03/Mar/2015 15:53:42] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK

10.0.17.154:57467 - - [03/Mar/2015 15:53:43] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57466 - - [03/Mar/2015 15:53:43] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57465 - - [03/Mar/2015 15:53:43] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
10.0.17.217:52439 - - [03/Mar/2015 16:01:16] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 8, 2, 57, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 27, 0, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57492 - - [03/Mar/2015 16:04:12] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57493 - - [03/Mar/2015 16:04:12] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
10.0.17.154:57491 - - [03/Mar/2015 16:04:12] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 8, 8, 57, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 27, 0, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57509 - - [03/Mar/2015 16:09:25] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error10.0.17.154:57510 - - [03/Mar/2015 16:09:25] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK

10.0.17.154:57508 - - [03/Mar/2015 16:09:25] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 8, 16, 56, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 27, 0, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57522 - - [03/Mar/2015 16:17:00] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57521 - - [03/Mar/2015 16:17:00] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
10.0.17.154:57523 - - [03/Mar/2015 16:17:00] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
10.0.17.154:57527 - - [03/Mar/2015 16:17:06] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OKTraceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist


 10.0.17.154:57526 - - [03/Mar/2015 16:17:06] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57525 - - [03/Mar/2015 16:17:06] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
10.0.17.154:57531 - - [03/Mar/2015 16:18:11] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 8, 17, 42, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 27, 0, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist
10.0.17.154:57533 - - [03/Mar/2015 16:18:11] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK

10.0.17.154:57532 - - [03/Mar/2015 16:18:11] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57537 - - [03/Mar/2015 16:20:01] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 8, 19, 25, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 27, 0, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57538 - - [03/Mar/2015 16:20:01] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57539 - - [03/Mar/2015 16:20:01] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 8, 19, 51, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 27, 0, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57544 - - [03/Mar/2015 16:23:44] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57543 - - [03/Mar/2015 16:23:44] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
10.0.17.154:57545 - - [03/Mar/2015 16:23:44] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
/home/jiangfei/samsung/api/pytz/__init__.py:35: UserWarning: Module pytz was already imported from /home/jiangfei/samsung/api/pytz/__init__.pyc, but /usr/lib/python2.7/dist-packages is being added to sys.path
  from pkg_resources import resource_stream
10.0.17.154:57553 - - [03/Mar/2015 16:30:54] "HTTP/1.1 GET /brandinblog/api/1/search" - 200 OK
Traceback (most recent call last):
  File "/home/jiangfei/samsung/api/web/application.py", line 239, in process
    return self.handle()
  File "/home/jiangfei/samsung/api/web/application.py", line 230, in handle
    return self._delegate(fn, self.fvars, args)
  File "/home/jiangfei/samsung/api/web/application.py", line 462, in _delegate
    return handle_class(cls)
  File "/home/jiangfei/samsung/api/web/application.py", line 438, in handle_class
    return tocall(*args)
  File "/home/jiangfei/samsung/api/api_trend.py", line 63, in GET
    results = mymongo.mymongoconn.inline_mapreduce('messages', mp, rdc, query=query)
  File "/home/jiangfei/samsung/api/mymongo.py", line 38, in inline_mapreduce
    return self.db[coll].inline_map_reduce(map=map, reduce=reduce, full_response=full_response, query=query)
  File "/home/jiangfei/samsung/api/pymongo/collection.py", line 1294, in inline_map_reduce
    out={"inline": 1}, **kwargs)
  File "/home/jiangfei/samsung/api/pymongo/database.py", line 395, in command
    msg, allowable_errors)
  File "/home/jiangfei/samsung/api/pymongo/helpers.py", line 144, in _check_command_response
    raise OperationFailure(msg % details["errmsg"])
OperationFailure: command SON([('mapreduce', u'messages'), ('map', 'function() { if (this.postTime != null) { key = Math.floor((this.postTime.getTime() + 8 * 3600000) / 1000 / 86400); emit( key, {count: 1} ); } }'), ('reduce', 'function( key, values ) { var stats = {}; for ( var i = 0; i < values.length; i++ ) { for ( var key in values[i] ) { if (stats[key] == null) stats[key] = 0; stats[key] += values[i][key]; } } return stats; }'), ('query', {'$or': [{'keywords.\xe4\xb8\x89\xe6\x98\x9f': {'$exists': True}}, {'keywords.nec': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe6\x9c\xac\xe7\x94\xb5\xe6\xb0\x94"': {'$exists': True}}, {'keywords.toshiba': {'$exists': True}}, {'keywords."\xe4\xb8\x9c\xe8\x8a\x9d"': {'$exists': True}}, {'keywords.hitachi': {'$exists': True}}, {'keywords."\xe6\x97\xa5\xe7\xab\x8b"': {'$exists': True}}, {'keywords.fujitsu': {'$exists': True}}, {'keywords."\xe5\xaf\x8c\xe5\xa3\xab\xe9\x80\x9a"': {'$exists': True}}, {'keywords.sony': {'$exists': True}}, {'keywords."\xe7\xb4\xa2\xe5\xb0\xbc"': {'$exists': True}}, {'keywords.panasonic': {'$exists': True}}, {'keywords.\xe6\x9d\xbe\xe4\xb8\x8b': {'$exists': True}}], 'postTime': {'$lte': datetime.datetime(2015, 3, 3, 15, 59, 59, tzinfo=<UTC>), '$gte': datetime.datetime(2015, 2, 26, 16, 0, tzinfo=<UTC>)}}), ('out', {'inline': 1})]) failed: ns doesn't exist

10.0.17.154:57552 - - [03/Mar/2015 16:30:54] "HTTP/1.1 GET /brandinblog/api/1/trend" - 500 Internal Server Error
10.0.17.154:57551 - - [03/Mar/2015 16:30:54] "HTTP/1.1 GET /brandinblog/api/1/count" - 200 OK
